/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 20ton_AC_CC.gltf 
*/

import React from 'react'
import { useGLTF } from '@react-three/drei'
import { useEffect } from 'react'
import { useCharacterAnimations } from '../../src/components/AugmentedReality/contexts/CharacterAnimations'
import useModelsStore from '../../src/components/AugmentedReality/stores/modelStore'

export default function Air20tonCC(props) {
  const { nodes, materials } = useGLTF('models/20ton_AC_CC.gltf')
  const { isAnimating, showGeometry } = useModelsStore(); // ‡∏î‡∏∂‡∏á state ‡∏à‡∏≤‡∏Å Zustand
  const {setAnimations} = useCharacterAnimations();

  useEffect(() => {
    setAnimations([]);
  }, [setAnimations]);               

  return (
    <group {...props} dispose={null} scale={0.1}>

       {/* üî• ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• Geometry */}
       {showGeometry && (
        <mesh             material={materials['Material.002']}  
        material-transparent={true} material-opacity={0.5} />
      )}
      
      <group position={[0, 11.826, -0.16]}>
        <mesh geometry={nodes.Cube003_1.geometry} material={materials['Material.006']} />
        <mesh geometry={nodes.Cube003_2.geometry} material={materials['Material.008']} />
      </group>
      <mesh geometry={nodes.Cube016.geometry} material={nodes.Cube016.material} position={[0.068, 22.267, 3.071]} />
      <mesh geometry={nodes.Cube017.geometry} material={materials['Material.001']} position={[-3.646, 22.308, 3.139]} />
      <mesh geometry={nodes.Cube018.geometry} material={materials['Material.001']} position={[3.816, 22.308, 3.139]} />
      <mesh geometry={nodes.Cube019.geometry} material={nodes.Cube019.material} position={[-0.854, 22.322, 2.037]} rotation={[0, 0, -Math.PI / 2]} />
      <mesh geometry={nodes.Cube020.geometry} material={nodes.Cube020.material} position={[6.744, 22.322, 2.037]} rotation={[0, 0, -Math.PI / 2]} />
      <mesh geometry={nodes['pngtree-texture-of-an-air-conditioner-s-radiator-grille-ima'].geometry} material={materials['pngtree-texture-of-an-air-conditioner-s-radiator-grille-image_1']} position={[3.71, 4.883, 3.556]} rotation={[Math.PI / 2, 0, 0]} scale={[3.177, 4.12, 2.738]} />
      <mesh geometry={nodes['pngtree-texture-of-an-air-conditioner-s-radiator-grille-ima001'].geometry} material={materials['pngtree-texture-of-an-air-conditioner-s-radiator-grille-image_1']} position={[-3.542, 7.779, 3.556]} rotation={[Math.PI / 2, 0, 0]} scale={[3.177, 4.12, 2.738]} />
      <mesh geometry={nodes['pngtree-texture-of-an-air-conditioner-s-radiator-grille-ima002'].geometry} material={materials['pngtree-texture-of-an-air-conditioner-s-radiator-grille-image_1']} position={[3.71, 7.779, 3.556]} rotation={[Math.PI / 2, 0, 0]} scale={[3.177, 4.12, 2.738]} />
      <mesh geometry={nodes['pngtree-texture-of-an-air-conditioner-s-radiator-grille-ima003'].geometry} material={materials['pngtree-texture-of-an-air-conditioner-s-radiator-grille-image_1']} position={[-3.542, 10.757, 3.556]} rotation={[Math.PI / 2, 0, 0]} scale={[3.177, 4.12, 2.738]} />
      <mesh geometry={nodes['pngtree-texture-of-an-air-conditioner-s-radiator-grille-ima004'].geometry} material={materials['pngtree-texture-of-an-air-conditioner-s-radiator-grille-image_1']} position={[3.71, 10.757, 3.553]} rotation={[Math.PI / 2, 0, 0]} scale={[3.177, 4.12, 2.738]} />
      <mesh geometry={nodes['pngtree-texture-of-an-air-conditioner-s-radiator-grille-image_1'].geometry} material={materials['pngtree-texture-of-an-air-conditioner-s-radiator-grille-image_1']} position={[-3.542, 4.883, 3.556]} rotation={[Math.PI / 2, 0, 0]} scale={[3.177, 4.12, 2.738]} />
      {isAnimating && (
        <mesh  geometry={nodes.Cube001.geometry} material={materials['Material.002']} />
      )}
    </group>
  )
}

useGLTF.preload('models/20ton_AC_CC.gltf')
